{"version":3,"sources":["Components/Header.js","Components/ToDoForm.js","Components/ToDo.js","Components/ToDoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","handleSubmit","preventDefault","local_id","listLength","local_date","Date","toJSON","slice","onSubmit","id","text","date","complete","placeholder","onChange","name","ref","onClick","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","console","log","TodoList","setTodos","Axios","get","then","res","data","test","post","newTodos","length","updatedTodos","put","switchToDo","tbd","removedArr","filter","delete","todoId","newValue","edittedTodo","changeTodo","prev","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.913a1aae.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        \r\n        <header>\r\n            <h1 className=\"todo-header\">\r\n                Tasks To Do\r\n            </h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect, useRef } from 'react';\r\nimport { GrAdd } from 'react-icons/gr';\r\nimport { GrCheckmark } from 'react-icons/gr';\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n    const inputRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value);\r\n    };\r\n    \r\n    const assignDate = () => {\r\n        var d = new Date().toJSON().slice(0, 19)\r\n        return d;\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        // possible bug fix: increment the id with the size of the todo_list length.\r\n        //                   then push to the beginning of the list.\r\n        //                   map, sort, and reassign id.\r\n        let local_id = props.listLength + 1;\r\n        let local_date = assignDate();\r\n        props.onSubmit({\r\n            id: local_id,\r\n            text: input,\r\n            date: local_date,\r\n            complete: false\r\n        });\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='todo-form'>\r\n        {props.edit ? (\r\n            <>\r\n            {/** returns edit is not empty */}\r\n            <input\r\n                placeholder='Update your item'\r\n                value={input}\r\n                onChange={handleChange}\r\n                name='text'\r\n                ref={inputRef}\r\n                className='todo-input edit'\r\n            />\r\n            <GrCheckmark \r\n                onClick={handleSubmit} \r\n                className='update-icon'>\r\n            </GrCheckmark>\r\n            </>\r\n        ) : (\r\n            <>\r\n            {/** returns if not edit */}\r\n            <input\r\n                placeholder='Add a todo'\r\n                value={input}\r\n                onChange={handleChange}\r\n                name='text'\r\n                className='todo-input'\r\n                ref={inputRef}\r\n            />\r\n            < GrAdd \r\n                onClick={handleSubmit} \r\n                className='add-icon'>\r\n            </GrAdd>\r\n            </>\r\n        )}\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\n// Imported Components\r\nimport TodoForm from './ToDoForm';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: '',\r\n    text: '',\r\n    date: ''\r\n  });\r\n  \r\n  const submitUpdate = input => {\r\n    // update edit state\r\n    updateTodo(edit.id, input);\r\n    // after update reset state to empty\r\n    setEdit({\r\n      id: '',\r\n      text: '',\r\n      date: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      // styling for when a todo is complete\r\n      className={todo.complete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n        <div className=\"todo-text\" key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n            {todo.text}\r\n            <p className=\"todo-date\">\r\n              {console.log(todo.date + todo.text)}\r\n              {todo.date.slice(5,7) + \"/\" + todo.date.slice(8,10) + \"/\" + todo.date.slice(0,4)+ \r\n              \" - \" + todo.date.slice(11,13) + \":\" + todo.date.slice(14,16) + \":\" + todo.date.slice(17,19) }\r\n            </p>\r\n        </div>\r\n\r\n        <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        <TiEdit\r\n          onClick={() => setEdit({ id: todo.id, text: todo.text })}\r\n          className='edit-icon'\r\n        />\r\n        </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;","import React, { useState, useEffect } from 'react';\r\n//import data from '../data.json'\r\n// Imported Components\r\nimport Header from './Header'\r\nimport TodoForm from './ToDoForm';\r\nimport Todo from './ToDo';\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        Axios.get(\r\n            'http://ec2-3-143-116-194.us-east-2.compute.amazonaws.com/api/get'\r\n        )\r\n        .then(res => {setTodos(res.data);})\r\n    }, []);\r\n\r\n    const submitTodos = (id, input, date) => {\r\n        Axios.post(\r\n            'http://ec2-3-143-116-194.us-east-2.compute.amazonaws.com/api/insert', {\r\n            id: id, \r\n            text: input, \r\n            date: date,\r\n            complete: false\r\n        }).then(() => {\r\n            console.log('Post Successful');\r\n        });\r\n    };\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n        return;\r\n        }\r\n        // add new todo to front of list of todos.\r\n        submitTodos(todo.id, todo.text, todo.date);\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const changeTodo = (todoId, edittedTodo) => {\r\n        Axios.put(\r\n            \"http://ec2-3-143-116-194.us-east-2.compute.amazonaws.com/api/update\", {\r\n            id: todoId,\r\n            text: edittedTodo.text, \r\n            date: edittedTodo.date,\r\n        }).then(() => {\r\n            console.log('Post Successful');\r\n        })\r\n    };\r\n    const updateTodo = (todoId, newValue) => {\r\n        if (!newValue.text || /^\\s*$/.test(newValue.text)) {\r\n            return;\r\n        }\r\n        changeTodo(todoId, newValue)\r\n        newValue.id = todoId;\r\n        setTodos(prev => prev.map(item => ((item.id === todoId) \r\n                                        ?  (newValue) \r\n                                        :  (item)\r\n                                        )));\r\n    };\r\n\r\n    const deleteTodo = tbd => {\r\n        console.log(tbd)\r\n        Axios.delete(`http://ec2-3-143-116-194.us-east-2.compute.amazonaws.com/api/delete/${tbd}`);\r\n    }\r\n    const removeTodo = id => {\r\n        const removedArr = [...todos].filter(todo => todo.id !== id);\r\n        setTodos(removedArr); \r\n        deleteTodo(id);\r\n    };\r\n\r\n    const switchToDo = (id, complete) => {\r\n        Axios.put('http://ec2-3-143-116-194.us-east-2.compute.amazonaws.com/api/complete', {\r\n            id: id, \r\n            complete: complete\r\n        }).then(() => {\r\n            console.log('Complete Change Successful');\r\n        });\r\n    }\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n        if (todo.id === id) {\r\n            todo.complete = !todo.complete;\r\n            switchToDo(id, todo.complete);\r\n        }\r\n        return todo;\r\n        });\r\n        setTodos(updatedTodos);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Header/>\r\n        <TodoForm onSubmit={addTodo} listLength={todos.length} />\r\n        <Todo\r\n            todos={todos}\r\n            completeTodo={completeTodo}\r\n            removeTodo={removeTodo}\r\n            updateTodo={updateTodo}\r\n        /> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './Components/ToDoList';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}